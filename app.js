// ======================================================
//
//  CONFIG - H츿R 츿NDRAR DU SPELETS INNEH칀LL
//
// ======================================================

const mapStartCenter = { lat: 59.284, lng: 17.785 };
const UNLOCK_DISTANCE = 25; // Hur m친nga meter ifr친n m친ste man vara?
const treasureLocationDescription = "under den st칬rsta stenen, bakom den gamla tr칛b칛nken vid fotbollsplanens 칬stra kant.";

const locations = [

    // Steg 1: Anslagstavlan
    { 
        position: { lat: 59.2841, lng: 17.7851 },
        title: "Ett Eko vid Anslagstavlan",
        story: "Leos viskning 칛r starkast h칛r, d칛r meddelanden delas. 'Min historia b칬rjar h칛r', s칛ger han. 'Ett tecken finns kvar, om ni tittar noga...'",
        task: "Hur m친nga h칛ftstift sitter i den 칬vre, v칛nstra fj칛rdedelen av tavlan?",
        answer: "7" 
    },

    // Steg 2: Lekpark 1 (N칛rmast start)
    { 
        position: { lat: 59.2838, lng: 17.7855 },
        title: "Minnen vid Gungorna",
        story: "'Jag 칛lskade att flyga h칬gt, h칬gt upp i luften h칛r', viskar Leo. 'S친 h칬gt att jag n칛stan kunde nudda molnen. Men n친got var annorlunda med min favoritgunga.'",
        task: "Vilken f칛rg har s칛tet p친 gungan som 칛r l칛ngst till h칬ger?",
        answer: "r칬d" 
    },

    // Steg 3: En specifik villa
    { 
        position: { lat: 59.2845, lng: 17.7858 },
        title: "Huset med Stenmuren",
        story: "'Jag gick f칬rbi det h칛r huset varje dag', s칛ger Leo. 'Jag brukade balansera p친 den l친ga stenmuren. De som bodde d칛r hade ristat in sitt namn.'",
        task: "Vilken 칛r den tredje bokstaven i namnet som 칛r inristat i muren?",
        answer: "S" 
    },

    // Steg 4: Det fallna kl칛ttertr칛det
    { 
        position: { lat: 59.2848, lng: 17.7852 },
        title: "Det Fallna Tr칛det",
        story: "'Det h칛r var mitt kungad칬me! Jag kl칛ttrade 칛nda till toppen. Men en stormig natt f칬ll det, och en del av min barndom med det. Tr칛det minns stormen.'",
        task: "R칛kna de stora, avbrutna grenarna som fortfarande sitter fast i huvudstammen.",
        answer: "4" 
    },

    // Steg 5: Bouleplanen
    { 
        position: { lat: 59.2842, lng: 17.7845 },
        title: "De Silvergl칛nsande Kloten",
        story: "'De vuxna spelade ett konstigt, tyst spel h칛r', minns Leo. 'Jag satt p친 b칛nken och s친g kloten gl칛nsa. Allt var s친 fridfullt.'",
        task: "Vad blir po칛ngen om du multiplicerar antalet b칛nkar med antalet papperskorgar vid planen?",
        answer: "2" 
    },

    // Steg 6: Lekpark 2 (Den med rutschkanan)
    { 
        position: { lat: 59.2835, lng: 17.7848 },
        title: "Den L친nga Resan Ner",
        story: "'Det kittlade i magen varje g친ng! Det h칛r var den b칛sta rutschkanan i hela v칛rlden.'",
        task: "Hur m친nga trappsteg har stegen som leder upp till rutschkanan?",
        answer: "5" 
    },

    // Steg 7: En annan villa (t.ex. den med en flaggst친ng)
    { 
        position: { lat: 59.2839, lng: 17.7862 },
        title: "Vimpeln i Vinden",
        story: "'H칛r brukade en flagga alltid vaja', s칛ger Leo. 'Den visade mig 친t vilket h친ll vinden bl친ste. Husets nummer 칛r en del av g친tan.'",
        task: "Addera de tv친 siffrorna i husnumret. (Exempel: Nr 24 blir 2+4=6).",
        answer: "6" 
    },

    // Steg 8: Den nerlagda fotbollsplanen
    { 
        position: { lat: 59.2850, lng: 17.7865 },
        title: "Den Tysta Matchen",
        story: "'H칛r var det alltid fullt av liv. Skratt och rop... Jag minns en match, jag sprang l칛ngs kanten... och pl칬tsligt k칛nde jag att fickan var tom. Det var h칛r... det var h칛r jag tappade den.'",
        task: "G친 till det norra m친let. Hur m친nga rostiga skruvar h친ller fast den v칛nstra stolpen i marken?",
        answer: "3" 
    },

    // Steg 9: Lekpark 3 (Den sista)
    { 
        position: { lat: 59.2847, lng: 17.7841 },
        title: "Den Sista Pusselbiten",
        story: "'Efter att jag tappat min tr칛h칛st kom jag hit. Jag var s친 ledsen. Jag satt i sandl친dan och gr칛vde, som om jag kunde hitta en ny skatt. Men jag hittade bara en sista ledtr친d...'",
        task: "Jag 칛r gjord av tr칛, men 칛r inte ett tr칛d. Jag har fyra ben, men kan inte g친. Jag st친r f칬r evigt vid fotbollsplanens kant. Vad 칛r jag?",
        answer: "b칛nken" 
    },

    // Steg 10: Skatten (Denna position anv칛nds inte aktivt, bara en placeholder)
    { 
        position: { lat: 59.2851, lng: 17.7866 }, 
        title: "Skatten!",
        story: "Detta 칛r den sista platsen!",
        task: "Hitta skatten!",
        answer: "placeholder"
    }
];


// ======================================================
//
//  SPELMOTOR - R칐R EJ KODEN NEDANF칐R
//
// ======================================================

let map;
let currentMarker;
let currentIndex = 0;
let AdvancedMarkerElement;
let userPosition = null;
let userMarker = null;

const startScreen = document.getElementById('start-screen');
const mapScreen = document.getElementById('map-screen');
const endScreen = document.getElementById('end-screen');
const startBtn = document.getElementById('start-btn');
const modal = document.getElementById('task-modal');
const taskTitle = document.getElementById('task-title');
const taskStory = document.getElementById('task-story');
const taskQuestion = document.getElementById('task-question');
const taskAnswer = document.getElementById('task-answer');
const submitAnswerBtn = document.getElementById('submit-answer-btn');
const feedbackText = document.getElementById('feedback-text');
const distanceInfo = document.getElementById('distance-info');

async function initMap() {
    const { Map } = await google.maps.importLibrary("maps");
    const { AdvancedMarkerElement: MarkerLibrary } = await google.maps.importLibrary("marker");
    AdvancedMarkerElement = MarkerLibrary;
    const myMapId = "e0482b82057a9b12a4579124";
    map = new Map(document.getElementById("map"), {
        center: mapStartCenter,
        zoom: 19,
        disableDefaultUI: true,
        zoomControl: true,
        mapId: myMapId
    });
    setupEventListeners();
}

function startLocationWatcher() {
    if (!navigator.geolocation) {
        distanceInfo.textContent = "Geopositionering st칬ds inte.";
        return;
    }
    navigator.geolocation.watchPosition((position) => {
        userPosition = { lat: position.coords.latitude, lng: position.coords.longitude };
        if (!userMarker) {
            const userMarkerElement = document.createElement('div');
            userMarkerElement.className = 'user-marker';
            userMarker = new AdvancedMarkerElement({ position: userPosition, map: map, content: userMarkerElement, title: 'Din position' });
        } else {
            userMarker.position = userPosition;
        }
        updateDistance();
    }, () => {
        distanceInfo.textContent = "Kunde inte h칛mta position.";
    }, { enableHighAccuracy: true });
}

function updateDistance() {
    if (!userPosition || currentIndex >= locations.length - 1) {
        distanceInfo.style.display = 'none';
        return;
    }
    distanceInfo.style.display = 'block';
    const targetPosition = locations[currentIndex].position;
    const distance = getDistance(userPosition, targetPosition);
    if (distance <= UNLOCK_DISTANCE) {
        distanceInfo.textContent = "Du 칛r framme! Klicka p친 sp칬ket.";
    } else {
        distanceInfo.textContent = `Du 칛r ${Math.round(distance)} meter bort.`;
    }
}

function getDistance(pos1, pos2) {
    const R = 6371e3;
    const 픥1 = pos1.lat * Math.PI / 180;
    const 픥2 = pos2.lat * Math.PI / 180;
    const 풊픥 = (pos2.lat - pos1.lat) * Math.PI / 180;
    const 풊풭 = (pos2.lng - pos1.lng) * Math.PI / 180;
    const a = Math.sin(풊픥 / 2) * Math.sin(풊픥 / 2) + Math.cos(픥1) * Math.cos(픥2) * Math.sin(풊풭 / 2) * Math.sin(풊풭 / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    return R * c;
}

function createMarkerIcon(type) {
    const iconDiv = document.createElement('div');
    iconDiv.className = 'marker-icon';
    if (type === 'completed') {
        iconDiv.textContent = '游꾺';
        iconDiv.classList.add('completed');
    } else {
        iconDiv.textContent = '游놑';
    }
    return iconDiv;
}

function setupEventListeners() {
    startBtn.addEventListener('click', () => {
        startScreen.classList.remove('active');
        mapScreen.classList.add('active');
        google.maps.event.trigger(map, 'resize');
        map.setCenter(mapStartCenter);
        showNextLocation();
        startLocationWatcher();
    });
    submitAnswerBtn.addEventListener('click', checkAnswer);
    taskAnswer.addEventListener('keyup', (event) => {
        if (event.key === "Enter") checkAnswer();
    });
}

function showNextLocation() {
    if (currentIndex < locations.length - 1) {
        const location = locations[currentIndex];
        currentMarker = new AdvancedMarkerElement({
            position: location.position,
            map: map,
            title: location.title,
            content: createMarkerIcon('active')
        });
        currentMarker.addListener('click', () => {
            if (!userPosition) {
                alert("V칛ntar p친 din position...");
                return;
            }
            const distance = getDistance(userPosition, location.position);
            if (distance <= UNLOCK_DISTANCE) {
                modal.style.display = 'flex';
                taskTitle.textContent = location.title;
                taskStory.textContent = location.story;
                taskQuestion.textContent = location.task;
                taskAnswer.value = '';
                feedbackText.textContent = '';
            } else {
                alert(`Du 칛r f칬r l친ngt bort! G친 n칛rmare, du 칛r ${Math.round(distance)} meter ifr친n.`);
            }
        });
        updateDistance();
    } else {
        showEndScreen();
    }
}

function checkAnswer() {
    const userAnswer = taskAnswer.value.trim().toLowerCase();
    const correctAnswer = locations[currentIndex].answer.toLowerCase();
    if (userAnswer === correctAnswer) {
        feedbackText.textContent = "R칛tt svar!";
        feedbackText.style.color = "#00ff00";
        if (currentMarker) {
            currentMarker.content = createMarkerIcon('completed');
            currentMarker.gmpClickable = false;
        }
        setTimeout(() => {
            modal.style.display = 'none';
            currentIndex++;
            showNextLocation();
        }, 1500);
    } else {
        feedbackText.textContent = "Fel svar. F칬rs칬k igen!";
        feedbackText.style.color = "#ff0000";
    }
}

function showEndScreen() {
    mapScreen.classList.remove('active');
    endScreen.classList.add('active');
    document.getElementById('treasure-location').textContent = treasureLocationDescription;
}

window.initMap = initMap;